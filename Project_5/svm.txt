from sklearn.pipeline import Pipeline
from sklearn.feature_selection import SelectKBest
from sklearn.grid_search import GridSearchCV

pipe_svm = Pipeline([('feat', SelectKBest()), ('clf', svm.SVC())])

K = range(1, 19)
C = [0.01, 0.1, 0.3, 0.5, 1.0, 1.5, 2.0]
kernel = ['linear', 'poly', 'rbf', 'sigmoid']
degree = [2, 3, 5, 7, 10]

param_grid_svm = [{'feat__k': K,
              'clf__C': C,
              'clf__kernel': kernel,
              'clf__degree': degree}]

svm_rf = GridSearchCV(estimator = pipe_svm, param_grid = param_grid_svm)
svm_rf.fit(features, labels)

print svm_rf.best_params_
print svm_rf.best_score_

*****

features_list = list(features.columns)
feature_indices_svm = svm_rf.best_estimator_.named_steps['feat'].get_support(indices = True)
final_feature_list_svm = [features_list[i] for i in feature_indices_rf]

print final_feature_list_svm

*****

print 'Feature scores: {}'.format(sorted(zip(features_list, svm_rf.best_estimator_.named_steps['feat'].scores_), 
                                         key = lambda x: x[1], reverse = True))