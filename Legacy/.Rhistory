y <-c (3,2,10)
rbind (x,y)
View(hw1_data)
View(hw1_data)
View(hw1_data)
View(hw1_data)
hw1_data <- read.csv("C:/Users/Adam/Desktop/hw1_data.csv")
View(hw1_data)
x <- c(17,14,4,5,14,12,10)
x[x>4] <- 10
x
x <- 1:4
y <- 2:3
x=y
x <- 1:4
x+y
z <- x+y
class (z)
x <- list(2, "a", "b", TRUE)
x [[2]]
x<-1
print (x)
x
msg <-"hello"
msg
x<-c(1,2,3)
y<-c(4,5,6)
rbind(x,y)
x<-c(1,"a",T)
x
class(x)
dim(x)
attributes(x)
?attributes
x
attr(x)
x<-(1:40000)
x
clear
dataset url <- "http:s3.amazonaws.com/practice_assignment/diet_data.zip"
dataset url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip",exdir="diet_data")
list.files("diet.data")
getwd()
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
andy[1, "Weight"]
andy[30, "Weight"]
files_full <- list.files("diet_data, full.names"=TRUE)
files_full <- list.files("diet_data", full.names=TRUE)
files_full
dat <- dataframe()
dat <- data.frame()
for (i in 1:5) {}
source('~/.active-rstudio-document')
}
dat <- rbind (dat, read.csv(files_full[i]))
clear
files_full <- list.files("diet_data", full.names=TRUE)
files_full
for (i in 1:5) {print(i)}
dat <- data.frame()
for (i in 1:5) {dat <- rbind(dat, read.csv(files_full[i]))}
str(dat)
median(dat$Weight, na,rm=TRUE)
median(dat$Weight, na.rm=TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
`001` <- read.csv("~/specdata/001.csv")
View(`001`)
select(,sulfate)
subset(001,[,"sulfate"])
subset(001,[, "sulfate"])
001[,sulfate]
001[,"sulfate"]
001[,c("sulfate")]
dim(001)
print 001
print(001)
View(`001`)
View(`001`)
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate", 1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate", 1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
001[,"nitrate"]
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
source('~/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
dat
dat<-data.frame()
dat<-rbind(dat, read.csv)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source('~/pollutantmean.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
x<-1:10
if(x>5){x<-0}
source('~/complete.R')
complete("specdata",1)
complete("specdata",12)
source('~/complete.R')
complete("specdata",1)
source('~/complete.R')
complete("specdata",1)
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
source('~/complete.R')
complete("specdata", 1)
complete("specdata", 2)
complete("specdata", c(2, 4))
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 1)
complete("specdata", 2)
complete("specdata", 4)
source('~/complete.R')
complete("specdata", 4)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete1.r')
complete1("specdata", 1)
source('~/complete.R')
complete1("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete.R')
source('~/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
Berkeley <- read.csv("C:/Users/Adam/Desktop/Berkeley.csv")
View(Berkeley)
rage_against_the_machine <- c("Zack de la Rocha", "Tom Morello", "Tim Commerford", "Brad Wilk")
rage_against_the_machine
help(C)
help(c)
install.packages(c("shiny", "knitr"))
install.packages("tidyr")
turnstile_weather_v2 <- read.csv("C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/improved-dataset/turnstile_weather_v2.csv")
View(turnstile_weather_v2)
library(dplyr)
getwd
getwd()
head(turnstile_weather_v2)
tbl_df(turnstile_weather_v2)
turnstile_weather_v2 %>%
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(turnstile_weather_v2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(rain)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(rain)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(no_rain)
turnstile_weather_v2 <- read.csv("C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/improved-dataset/turnstile_weather_v2.csv")
View(turnstile_weather_v2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
layer_histograms()
library(ggvis)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(rain)
View(no_rain)
View(entries)
View(entries)
turnstile_weather_v2 <- read.csv("C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/improved-dataset/turnstile_weather_v2.csv")
View(turnstile_weather_v2)
View(turnstile_weather_v2)
View(turnstile_weather_v2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
layer_histograms()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
layer_histograms()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
remove(no_rain_hist)
remove(rain_hist)
rain %>%
rain %>% ggvis(~ENTRIESn_hourly) %>% layer_histograms()
rain %>%
ggvis(~ENTRIESn_hourly) %>%
layer_histograms() %>%
scale_numeric("x", domain = c(0, 6000))
rain %>%
ggvis(~ENTRIESn_hourly) %>%
layer_histograms() %>%
scale_numeric("x", domain = c(0, 6000), nice = FALSE)
rain %>% ggvis(~ENTRIESn_hourly) %>% layer_histograms()
rain %>%
ggvis(~ENTRIESn_hourly) %>%
layer_histograms() %>%
scale_numeric("x", domain = c(0, 6000), nice = FALSE) %>%
scale_numeric("y", domain = c(0, 3500), nice = FALSE)
rain %>%
ggvis(~ENTRIESn_hourly) %>%
layer_histograms(width = 0.5) %>%
scale_numeric("x", domain = c(0, 6000), nice = FALSE) %>%
scale_numeric("y", domain = c(0, 3500), nice = FALSE)
rain %>%
ggvis(~ENTRIESn_hourly) %>%
layer_histograms(width = 500) %>%
scale_numeric("x", domain = c(0, 6000), nice = FALSE) %>%
scale_numeric("y", domain = c(0, 3500), nice = FALSE)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
rain %>%
rain %>% ggvis(~ENTRIESn_hourly) %>% layer_histograms()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
rain %>% ggvis(~ENTRIESn_hourly) %>% layer_histograms()
no_rain %>% ggvis(~ENTRIESn_hourly) %>% layer_histograms()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
install.packages(grid)
install.packages("grid")
install.packages("grid")
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
getwd()
source('~/R/multiplot.R')
multiplot(rain_hist, no_rain_hist, cols = 2)
multiplot(rain_hist, no_rain_hist, ncols = 2)
rain_hist
View(multiplot)
remove(multiplot)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
par(mfrow = c(1, 2))
rain_hist
no_rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
rain_hist
no_rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
remove(entries_hist)
par(mfrow = c(1,2))
rain_hist
no_rain_hist
attach(turnstile_weather_v2)
par(mfrow = c(1,2))
rain_hist
no_rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
remove(entries_hist)
install.packages("gridExtra")
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
grid.arrange(no_rain_hist, rain_hist, ncol = 2)
wilcox.test(ENTRIESn_hourly ~ rain, data = entries_hourly)
# 4 figures arranged in 2 rows and 2 columns
attach(mtcars)
par(mfrow=c(2,2))
plot(wt,mpg, main="Scatterplot of wt vs. mpg")
plot(wt,disp, main="Scatterplot of wt vs disp")
hist(wt, main="Histogram of wt")
boxplot(wt, main="Boxplot of wt")
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
attach(entries_hourly)
par(mfrow = c(1, 2))
rain_hist
no_rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
remove(no_rain_hist)
remove(rain_hist)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram() + facet_wrap(~ rain, ncol = 2, scales = "free")
View(entries_hourly)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
entries_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(entries_hourly)
turnstile_weather_v2 <- read.csv("C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/improved-dataset/turnstile_weather_v2.csv")
View(turnstile_weather_v2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
View(entries_hourly)
ggplot(entries_hourly, aes(ENTRIES))
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram()
install.packages("ggplot2")
setwd("C:\Users\Adam\Udacity\Data_Analyst_Nanodegree\Project_2")
setwd("C:\\Users\\Adam\\Udacity\\Data_Analyst_Nanodegree\\Project_2")
turnstile_weather_v2 <- read.csv("C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/improved-dataset/turnstile_weather_v2.csv")
View(turnstile_weather_v2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram()
ggplot(entries_hourly, aes(ENTRIESn_hourly), color = rain) + geom_histogram()
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram() + facet_wrap(~ rain, ncol = 2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram() + facet_wrap(~ rain, ncol = 2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram() + facet_wrap(~ rain, ncol = 2)
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
ggplot(entries_hourly, aes(ENTRIESn_hourly)) + geom_histogram() + facet_wrap(~ rain, ncol = 2)
ggplot(entries_hourly, aes(ENTRIESn_hourly), color = rain) + geom_histogram()
ggplot(entries_hourly, aes(ENTRIESn_hourly), opacity = rain) + geom_histogram()
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
rain_hist
no_rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
rain_hist
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
source('C:/Users/Adam/Udacity/Data_Analyst_Nanodegree/Project_2/Analyzing_NYC_Subway.R')
